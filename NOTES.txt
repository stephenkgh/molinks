# starting from scratch #

# first nuke everything
- remove all docker containers
- remove all docker images
- remove all docker volumes

# build & start containers
host> docker-compose up -d --build

# create database tables; from within web container:
container> python manage.py makemigrations molinks
container> python manage.py migrate

# NOTE: MAY have to remove all previous migrations files

# create super user
container> python manage.py createsuperuser
(answer questions)


# ---- testing ---------------------------------------------------------------------------------------

# run tests
container> python manage.py test

# create fake user with fake data
container> python manage.py fakeuser

# test via browser
http://localhost:8000

- login w/ fakeuser01
- login w/ stephenk and check out admin section


# ---- deploying -------------------------------------------------------------------------------------

# *** NOTE ***  This is not the right way to do things, but no time to unhackify it for now...

# deploy containers to vm04 (for now the containers are build from scratch on vm04;
# they should be "pushed" or something...)
# NOTE: requires a vm04 "context" exists
host> docker --context vm04 compose -f docker-prod.yaml up --build
host> rsync -av 

# update static files from the dev instance:
host> docker exec -it molinks-web-1 bash
container> python manage.py collectstatic
container> exit

# deploy static files
host> rsync -av staticfiles/* vm04:/www/sites/stephenk.com/molinks-static


# ---- notes on installing docker --------------------------------------------------------------------

Install docker:
- follow steps from: https://docs.docker.com/engine/install/ubuntu/
- follow steps from: https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user

    
Use Docker Compose V2:
- apt remove docker-compose
- install compose cli command by following this page:
    https://docs.docker.com/compose/cli-command/
